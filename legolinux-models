#!/bin/bash

shopt -s extglob

# models sync #

# variables #

cloud="/media/Internal/Drive"
root="${PWD}"/models

local_models_directory="${cloud}"/Lego/models
server_models_directory="${PWD}"/models

source_uid_file="${cloud}"/Lego/sketchfab/uid-list
destination_uid_file="${root}"/uid-list

# models #

# check if directory exists

if [ -d "${server_models_directory}" ]
then
	cd "${server_models_directory}" || exit

	rm -rf !(*.html|*.sh)
else
	mkdir -p "${server_models_directory}"
fi

# synchronize content

rsync					\
	-aqr				\
	--exclude='*.ldr'	\
	--exclude='*.mpd'	\
						"${local_models_directory}"/* "${server_models_directory}"

# indexes #

cd "${server_models_directory}" || exit

for directory in $(find "${server_models_directory}" -maxdepth 0 -type d)
do
	echo "${directory}"

	cd "${directory}" || exit

	# create model title file

	title="$(basename ${directory})"
	echo "${title^^}" | sed 's/-/ /g' > title

	for subdirectory in $(find ${server_models_directory}/* -maxdepth 1 -type d)
	do
		echo "${subdirectory}"

		cd "${subdirectory}" || exit

		# create model title file

		title="$(basename ${subdirectory})"
		echo "${title^^}" | sed 's/-/ /g' > title
	done

	# exit to top level

	cd "${server_models_directory}" || exit
done

# background #

# check if directory exists

if [ -d "../background" ]
then
	rm -rf "../background"
	mkdir -p "../background"

else
	mkdir -p "../background"
fi

extensions_list=(
    png
)

for extension in ${extensions_list[@]}
do
    # copy flat renders into background directory

    count=0

    for background in $(echo $(find ${local_models_directory} -type f -iname flat."${extension}"))
    do
        rsync -aqr "${background}" "../background/background-${count}.png"

        ((count++))
    done

    # pad filenames evenly

	count=1

	for background in ../background/*.png
	do
		pad_count=$(printf "%03d.png" "${count}")

		mv -i -- "${background}" ../background/background-"$pad_count"

		let count=count+1
	done

# BEGIN JAVASCRIPT

# update random background generator with new file count

# keep formatting as is - prevents javascript/jquery execution errors

cat << FILE > ../javascript/set-random-background.js
// set random background //

\$(document).ready(function() {
var count = ${count};

function pad(str, max) {
	str = str.toString();
	return str.length < max ? pad("0" + str, max) : str;
}

\$('.background').css(
	'background-image',
	'url("/background/background-' + pad(Math.floor(Math.random() * count), 3) + '.png ")'
);
});
FILE

# END JAVASCRIPT

done
